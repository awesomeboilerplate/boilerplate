@charset "UTF-8";
#responsive-tester {
  bottom: 0.5rem;
  display: block;
  font-size: 0.85rem;
  left: 0.5rem;
  padding-left: 1.5rem;
  position: fixed;
}

#responsive-tester span {
  background-color: #999;
  border-radius: 3rem;
  color: rgba(255, 255, 255, 0);
  display: inline-block;
  height: 1rem;
  left: 0;
  line-height: 1;
  margin-top: -0.5rem;
  overflow: hidden;
  position: absolute;
  top: 50%;
  width: 1rem;
  z-index: 10000;
}

#responsive-tester::before, #responsive-tester::after {
  background-color: black;
  color: #FFF;
  display: inline;
  opacity: 0.8;
  padding: 0.15rem;
}

#responsive-tester::before {
  content: 'Base: 0px\2013';
}

#responsive-tester::after {
  content: "576px";
}

/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Correct the line height in all browsers.
     * 2. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0;
}

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block;
}

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px;
}

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
     * Add the correct display in IE.
     */
main {
  display: block;
}

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit;
}

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder;
}

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic;
}

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000;
}

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%;
}

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block;
}

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none;
}

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible;
}

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible;
}

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */
}

[type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */
}

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto;
}

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block;
}

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item;
}

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block;
}

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block;
}

/**
     * Add the correct display in IE.
     */
template {
  display: none;
}

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none;
}

.accordion > div.open .header {
  background: #d0d0d0;
}

.accordion > div.open .header::after {
  font: normal normal normal 1em / 1 "Font Awesome 5 Pro";
  content: "";
  display: inline-block;
  font-size: inherit;
  font-weight: "\F068";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  speak: none;
  text-rendering: auto;
  text-transform: none;
}

.accordion > div.close .header::after {
  font: normal normal normal 1em / 1 "Font Awesome 5 Pro";
  content: "";
  display: inline-block;
  font-size: inherit;
  font-weight: "\F067";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  speak: none;
  text-rendering: auto;
  text-transform: none;
}

.accordion > div.initially-hidden .content {
  display: none;
}

.accordion > div .header {
  background-color: #DDD;
  color: #191919;
  cursor: pointer;
  font-size: 1em;
  margin-top: .5em;
  padding: .5em 1em;
  position: relative;
  text-align: left;
  width: 100%;
}

.accordion > div .header:hover {
  background-color: #d0d0d0;
}

.accordion > div .header::after {
  bottom: 0;
  height: 1em;
  margin: auto 0;
  position: absolute;
  right: 1em;
  top: 0;
  width: 1em;
}

.accordion > div .content {
  padding: 1em 0;
}

.backgroundvideo {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: auto;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  overflow: hidden;
  position: relative;
}

.backgroundvideo .mold {
  background-color: rgba(255, 255, 255, 0.6);
  padding: 2em;
  text-align: center;
  z-index: 2;
}

.backgroundvideo video {
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 1;
}

.backgroundvideo::before {
  content: "";
  display: block;
  padding-top: 30%;
}

.carousel .slick-slide {
  color: #FFF;
  height: auto;
  padding: 3rem;
}

.carousel .slick-prev,
.carousel .slick-next {
  z-index: 1;
}

.carousel .slick-prev {
  left: 2rem;
}

.carousel .slick-next {
  right: 2rem;
}

.dossier > * {
  text-align: center;
}

.dossier > * .photo {
  margin-bottom: 2rem;
}

@media only screen and (min-width: 576px) {
  .dossier > * {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
    -ms-flex-wrap: nowrap;
        flex-wrap: nowrap;
    margin-bottom: 4rem;
    text-align: left;
  }
  .dossier > * .photo {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    margin-bottom: 0;
    margin-right: 2rem;
  }
  .dossier > * .bio .title {
    color: #727272;
    text-transform: uppercase;
  }
}

.header-content > .dropdown,
.mobile {
  background-color: #191919;
  bottom: 0;
  display: none;
  height: 100%;
  opacity: 0;
  overflow-y: auto;
  padding: 1rem;
  position: fixed;
  top: 0;
  -webkit-transition: -webkit-transform .25s;
  transition: -webkit-transform .25s;
  transition: transform .25s;
  transition: transform .25s, -webkit-transform .25s;
  width: 80%;
  z-index: 1000;
}

.header-content > .dropdown.left,
.mobile.left {
  display: block;
  left: 0;
  right: auto;
  -webkit-transform: translateX(-100%);
          transform: translateX(-100%);
}

.header-content > .dropdown.right,
.mobile.right {
  display: block;
  left: auto;
  right: 0;
  -webkit-transform: translateX(100%);
          transform: translateX(100%);
}

.header-content > .dropdown.left.open, .header-content > .dropdown.right.open,
.mobile.left.open,
.mobile.right.open {
  -webkit-transform: translateX(0);
          transform: translateX(0);
  -webkit-transition: -webkit-transform .25s;
  transition: -webkit-transform .25s;
  transition: transform .25s;
  transition: transform .25s, -webkit-transform .25s;
}

.header-content > .dropdown.init,
.mobile.init {
  display: block;
  opacity: 1;
}

.header-content > .dropdown.init .menu > div + div,
.mobile.init .menu > div + div {
  display: none;
}

.header-content > .dropdown nav.utility ul li a,
.mobile nav.utility ul li a {
  padding: 0.75rem 0;
}

.header-content > .dropdown ul,
.mobile ul {
  display: block;
  padding-left: 0;
}

.header-content > .dropdown ul li,
.mobile ul li {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  border-bottom: 1px solid #333232;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row nowrap;
          flex-flow: row nowrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin-bottom: 0;
  text-align: left;
}

.header-content > .dropdown ul li a,
.mobile ul li a {
  color: #fff;
  display: block;
  padding: 1rem 0;
}

.header-content > .dropdown ul li a > i.fa,
.mobile ul li a > i.fa {
  display: none;
}

.header-content > .dropdown ul li i.fa,
.mobile ul li i.fa {
  display: inline-block;
}

@media only screen and (min-width: 1024px) {
  .header-content > .dropdown.open.left,
  .mobile.open.left {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%);
  }
  .header-content > .dropdown.open.right,
  .mobile.open.right {
    -webkit-transform: translateX(100%);
            transform: translateX(100%);
  }
}

.features > * {
  background-color: #EEE;
  margin-bottom: 2rem;
  margin-left: auto;
  margin-right: auto;
  padding: 2rem;
  text-align: center;
}

.features > * img,
.features > * h3,
.features > * p {
  margin-bottom: 1rem;
}

.features > * .button {
  margin-bottom: 0;
}

@media only screen and (min-width: 1024px) {
  .features {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-flow: row nowrap;
            flex-flow: row nowrap;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }
  .features > * {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-flex: 1;
        -ms-flex: 1 0 0%;
            flex: 1 0 0%;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    margin-left: 3rem;
    margin-right: 0;
  }
  .features > * .button {
    -ms-flex-item-align: center;
        align-self: center;
    margin-top: auto;
  }
  .features > *:first-child {
    margin-left: 0;
  }
}

header.primary.sticky {
  position: fixed;
  top: 0;
  -webkit-transition: top 0.16s cubic-bezier(0, 0.4, 0.7, 1);
  transition: top 0.16s cubic-bezier(0, 0.4, 0.7, 1);
  width: 100%;
  z-index: 100;
}

.listing {
  margin-bottom: 2rem;
}

.listing form .search {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.listing form .search label {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.listing form .search .text {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.listing form .search .submit {
  -ms-flex-preferred-size: 120px;
      flex-basis: 120px;
  -ms-flex-negative: 0;
      flex-shrink: 0;
}

.listing form .search .submit input {
  height: 100%;
  width: 100%;
}

.listing form .filters {
  margin-bottom: 2rem;
}

.listing form .filters label {
  display: inline;
}

.listing form .filters span {
  background-color: #07547c;
  border-radius: 0.5rem;
  color: #fff;
  display: inline-block;
  margin: 0 0.5rem 0.5rem 0;
  padding: 0.5rem 1rem;
}

.listing form .filters input[type="checkbox"]:checked + span {
  background-color: #0C96DD;
}

.listing form .filters input[type="checkbox"] {
  display: none;
}

.listing ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

.listing ul li {
  border-top: 4px solid #b2b2b2;
  margin-bottom: 0;
  padding: 2rem 0;
}

.listing ul li .meta {
  display: block;
  font-size: 0.9rem;
  margin-bottom: 1em;
}

.listing ul li h2 + .meta {
  margin-top: -1em;
}

.listing ul li .summary p:last-of-type {
  margin-bottom: 0;
}

.login {
  background-color: #EEE;
  margin-left: auto;
  margin-right: auto;
  max-width: 600px;
  padding: 3rem;
}

.login input:focus {
  -webkit-box-shadow: 0 0 5px rgba(114, 164, 0, 0.7);
          box-shadow: 0 0 5px rgba(114, 164, 0, 0.7);
}

.login .submit {
  text-align: center;
}

.login .actions {
  text-align: center;
}

@media only screen and (min-width: 576px) {
  .login .actions {
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-flow: row wrap;
            flex-flow: row wrap;
  }
  .login .actions > * {
    margin: 0;
    padding: 0;
  }
  .login .actions label {
    margin-left: 1em;
  }
  .login .actions a {
    display: block;
    margin-left: auto;
    text-align: right;
  }
}

nav.pagination {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

nav.pagination ul {
  border: 1px solid #b2b2b2;
  border-radius: 2px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

nav.pagination li {
  margin-bottom: 0;
}

nav.pagination a {
  color: #0C96DD;
  padding: 0.5rem 1rem;
  position: relative;
}

nav.pagination li:not(:last-child) a {
  border-right: 1px solid #b2b2b2;
}

nav.pagination li.active a {
  background-color: #0C96DD;
  color: #fff;
  cursor: default;
  pointer-events: none;
}

nav.pagination li.active a::before, nav.pagination li.active a::after {
  background-color: #0C96DD;
}

nav.pagination li.active a:hover {
  color: #fff;
  background-color: #EB7424;
}

nav.pagination li.active a:hover::before, nav.pagination li.active a:hover::after {
  background-color: #EB7424;
}

nav.pagination li.disabled a {
  color: #b2b2b2;
  cursor: default;
  pointer-events: none;
}

nav.pagination li.previous a::before {
  font: normal normal normal 1em / 1 "Font Awesome 5 Pro";
  content: "";
  display: inline-block;
  font-size: inherit;
  font-weight: "\F100";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  speak: none;
  text-rendering: auto;
  text-transform: none;
}

nav.pagination li.next a::before {
  font: normal normal normal 1em / 1 "Font Awesome 5 Pro";
  content: "";
  display: inline-block;
  font-size: inherit;
  font-weight: "\F101";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  speak: none;
  text-rendering: auto;
  text-transform: none;
}

nav.pagination li:hover:not(.active):not(.disabled) a {
  background-color: #0C96DD;
  color: #FFF;
}

nav.pagination li:hover:not(.active):not(.disabled) a::before {
  background-color: #0C96DD;
  color: #FFF;
}

@media only screen and (max-width: 1023px) {
  .desktop nav.primary .dropdown,
  .desktop nav.primary i.fa {
    display: none;
  }
}

@media only screen and (min-width: 1024px) {
  .desktop nav.primary i.fa {
    display: inline-block;
  }
  .desktop nav.primary .dropdown {
    background-color: #2A2A2A;
    color: #FFF;
    display: block;
    font-size: 1rem;
    min-width: 260px;
    opacity: 0;
    padding: 2rem 0;
    position: absolute;
    top: 100%;
    -webkit-transition: opacity 300ms;
    transition: opacity 300ms;
    visibility: hidden;
    z-index: 1;
  }
  .desktop nav.primary .dropdown ul {
    display: block;
  }
  .desktop nav.primary .dropdown .menu > * {
    padding: 0 1rem;
  }
  .desktop nav.primary .dropdown .menu li {
    margin-bottom: 0.4em;
  }
  .desktop nav.primary .dropdown .menu a {
    color: #0C96DD;
  }
  .desktop nav.primary .dropdown .menu a:hover,
  .desktop nav.primary .dropdown .menu a:focus {
    color: #0975ad;
  }
  .desktop nav.primary .dropdown.open {
    opacity: 1;
    visibility: visible;
  }
}

.desktop nav.primary li.mega {
  position: static;
}

@media only screen and (min-width: 1024px) {
  .desktop nav.primary li.mega .dropdown {
    left: 0;
    top: 100%;
    width: 100%;
  }
  .desktop nav.primary li.mega .dropdown .menu {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-flow: row wrap;
            flex-flow: row wrap;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    margin-left: auto;
    margin-right: auto;
    max-width: 1168px;
  }
  .desktop nav.primary li.mega .dropdown .menu > * {
    border-left: 1px solid #777;
    -ms-flex-preferred-size: 0;
        flex-basis: 0;
    -webkit-box-flex: 1;
        -ms-flex-positive: 1;
            flex-grow: 1;
    padding: 0 3rem;
  }
  .desktop nav.primary li.mega .dropdown .menu > *:first-child {
    border-left: none;
    padding-left: 0;
  }
  .desktop nav.primary li.mega .dropdown .menu > *:last-child {
    padding-right: 0;
  }
}

.tabs {
  position: relative;
}

.tabs nav {
  border-bottom: 1px solid;
}

.tabs nav ul {
  list-style: none;
  margin-left: 20px;
  padding: 0;
  text-align: center;
}

.tabs nav li {
  background-color: #CBBFB4;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  cursor: pointer;
  display: inline-block;
  margin-bottom: 0;
  margin-right: 0.5em;
  padding: 0.5em 1em;
}

.tabs nav li.active {
  background-color: #FFF;
  border: 1px solid;
  border-bottom: none;
  position: relative;
}

.tabs nav li.active::after {
  background-color: #FFF;
  bottom: -1px;
  content: "";
  height: 1px;
  left: 0;
  position: absolute;
  width: 100%;
}

.tabs .panel {
  display: none;
  padding: 20px;
}

.tabs .panel.active {
  display: inherit;
}

@media only screen and (min-width: 1024px) {
  .tabs nav ul {
    margin-left: 20px;
    text-align: left;
  }
}

.testimonial {
  background-color: #191919;
  margin-bottom: 4rem;
  padding: 4rem 0 4rem;
  text-align: center;
}

.testimonial .asset {
  margin-bottom: 2rem;
}

.testimonial .asset img {
  max-width: 280px;
}

.testimonial blockquote {
  border: none;
  color: #fff;
  font-size: 1.125rem;
  margin-bottom: 1rem;
  padding: 0 2.5rem;
  position: relative;
}

.testimonial blockquote::before, .testimonial blockquote::after {
  color: #727272;
  font-family: Georgia, serif;
  font-size: 3.375rem;
  position: absolute;
}

.testimonial blockquote::before {
  content: "\201C";
  left: 0;
  line-height: 1;
  top: 0;
}

.testimonial blockquote::after {
  content: "\201D";
  line-height: 0;
  right: 0;
  bottom: 0;
}

.testimonial blockquote ~ p {
  color: #727272;
  font-size: 0.875rem;
  margin-bottom: 0;
  padding: 0 2.5rem;
}

@media only screen and (min-width: 1024px) {
  .testimonial {
    text-align: left;
  }
  .testimonial .wrapper {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }
  .testimonial .asset {
    -ms-flex-preferred-size: 33%;
        flex-basis: 33%;
    -ms-flex-negative: 0;
        flex-shrink: 0;
    margin-bottom: 0;
    margin-right: 4rem;
  }
  .testimonial .asset img {
    max-width: 100%;
  }
  .testimonial blockquote {
    font-size: 1.5rem;
    padding: 0 6rem;
  }
  .testimonial blockquote::before, .testimonial blockquote::after {
    font-size: 7rem;
  }
  .testimonial blockquote ~ p {
    font-size: 1rem;
    padding: 0 6rem;
  }
}

.tiles > * {
  background-color: #EEE;
  margin-bottom: 2rem;
  text-align: left;
}

.tiles > * *:last-child {
  margin-bottom: 0;
}

.tiles .tile > * {
  padding: 2rem;
}

@media only screen and (min-width: 576px) {
  .tiles {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-flow: row wrap;
            flex-flow: row wrap;
    margin-left: -1rem;
    margin-right: -1rem;
  }
  .tiles > * {
    -ms-flex-preferred-size: calc(50% - 2rem);
        flex-basis: calc(50% - 2rem);
    -ms-flex-negative: 0;
        flex-shrink: 0;
    margin-left: 1rem;
    margin-right: 1rem;
  }
}

@media only screen and (min-width: 1024px) {
  .tiles > * {
    -ms-flex-preferred-size: calc((100% / 4) - (2rem));
        flex-basis: calc((100% / 4) - (2rem));
  }
}

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  background-color: #FFF;
  color: #191919;
  font-family: Arial, sans-serif;
  font-size: 100%;
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

body {
  min-width: 320px;
  position: relative;
  height: 100%;
  width: 100%;
  overflow-x: hidden;
}

img {
  max-width: 100%;
  vertical-align: middle;
  height: auto;
}

::-moz-selection {
  background: #b2b2b2;
}

::selection {
  background: #b2b2b2;
}

::-moz-selection {
  background: #b2b2b2;
}

.group::before, .group::after {
  content: "";
  display: table;
}

.group::after {
  clear: both;
}

.container {
  margin-left: auto;
  margin-right: auto;
  max-width: 1200px;
  padding-left: 25px;
  padding-right: 25px;
  position: relative;
}

.columns > hr {
  border: 0;
  display: none;
}

@media only screen and (min-width: 576px) {
  .columns {
    display: table;
    table-layout: fixed;
    width: 100%;
  }
  .columns > * {
    display: table-cell;
    vertical-align: top;
  }
  .columns > hr {
    display: table-cell;
    width: 1rem;
  }
}

.sr-only {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.branding img {
  max-width: 180px;
}

.search-drawer {
  background-color: #4A4A4A;
  display: none;
}

.search-drawer > div {
  max-height: 0;
  overflow: hidden;
  -webkit-transition: max-height 150ms ease;
  transition: max-height 150ms ease;
}

.search-drawer > div.open {
  max-height: 80px;
}

.search-drawer form {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding: 1rem 0;
}

.search-drawer form > * {
  margin-bottom: 0;
}

.search-drawer form .text {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto;
}

.search-drawer form .submit input {
  height: 100%;
}

header.primary {
  background-color: #191919;
  position: relative;
}

header.primary .container {
  position: static;
}

header.primary .header-content {
  padding: 1rem 0;
}

header.primary .branding {
  -ms-flex-preferred-size: 180px;
      flex-basis: 180px;
  -ms-flex-negative: 0;
      flex-shrink: 0;
}

nav {
  margin-bottom: 2rem;
}

nav ul {
  list-style: none;
  margin: 0;
  padding-left: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

nav ul li::before {
  display: none;
}

nav ul li {
  margin-bottom: 0;
}

nav a {
  color: #0C96DD;
  display: block;
  padding: 0 0.5rem;
}

nav li.active a,
nav li.active:hover a {
  color: #191919;
}

nav.tabs {
  position: relative;
}

nav.tabs nav {
  border-bottom: 1px solid;
}

nav.tabs nav ul {
  list-style: none;
  margin-left: 20px;
  padding: 0;
  text-align: center;
}

nav.tabs nav li {
  background-color: #CBBFB4;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  cursor: pointer;
  display: inline-block;
  margin-bottom: 0;
  margin-right: 0.5em;
  padding: 0.5em 1em;
}

nav.tabs nav li.active {
  background-color: #FFF;
  border: 1px solid;
  border-bottom: none;
  position: relative;
}

nav.tabs nav li.active::after {
  background-color: #FFF;
  bottom: -1px;
  content: "";
  height: 1px;
  left: 0;
  position: absolute;
  width: 100%;
}

nav.tabs .panel {
  display: none;
  padding: 20px;
}

nav.tabs .panel.active {
  display: inherit;
}

@media only screen and (min-width: 1024px) {
  nav.tabs nav ul {
    margin-left: 20px;
    text-align: left;
  }
}

nav.breadcrumbs li:not(:last-child) a {
  padding-right: 0;
}

nav.breadcrumbs li:not(:last-child) a::after {
  font: normal normal normal 1em / 1 "Font Awesome 5 Pro";
  content: "";
  display: inline-block;
  font-size: inherit;
  font-weight: "\F105";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  speak: none;
  text-rendering: auto;
  text-transform: none;
  padding-left: 0.5rem;
}

nav.progress ul {
  border: 1px solid #b2b2b2;
  border-radius: 2px;
  display: block;
  width: 100%;
}

nav.progress a {
  padding: 0.5rem 1rem;
  position: relative;
  text-align: center;
}

nav.progress a:hover {
  color: #EB7424;
}

nav.progress li:not(:last-child) a {
  border-right: 1px solid #b2b2b2;
}

nav.progress li.active a {
  background-color: #0C96DD;
  color: #FFF;
  cursor: default;
  pointer-events: none;
}

nav.progress li.active a:hover {
  background-color: #EB7424;
  color: #FFF;
}

nav.progress li.disabled a {
  color: #b2b2b2;
  cursor: default;
  pointer-events: none;
}

nav.progress li:hover:not(.active, .disabled) a {
  color: #EB7424;
}

nav.progress li:not(:last-child) a {
  border: 0;
}

nav.progress li.complete a {
  background-color: #FFF;
  color: #ccc;
}

nav.progress li.complete a::before {
  background-color: #FFF;
}

nav.progress li.complete a:hover {
  color: #0C96DD;
}

@media only screen and (min-width: 576px) {
  nav.progress ul {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
  nav.progress li {
    -webkit-box-flex: 1;
        -ms-flex: 1 1 auto;
            flex: 1 1 auto;
    position: relative;
  }
  nav.progress li:last-child a::before {
    display: none;
  }
  nav.progress a::after, nav.progress a::before {
    border: 0 solid transparent;
    border-bottom: 1.25rem solid transparent;
    border-left: 1rem solid #FFF;
    border-top: 1.25rem solid transparent;
    content: '';
    position: absolute;
    right: 0;
    top: 0;
    z-index: 1;
  }
  nav.progress a::after {
    border-left-color: #FFF;
  }
  nav.progress a::before {
    border-left-color: #999898;
    margin-right: -1px;
  }
  nav.progress li.active {
    margin-left: -1rem;
    z-index: 2;
  }
  nav.progress li.active::before {
    border-bottom: 1.25rem solid #0C96DD;
    border-left: 1rem solid #FFF;
    border-top: 1.25rem solid #0C96DD;
    content: '';
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    z-index: 2;
  }
  nav.progress li.active a::after, nav.progress li.active a::before {
    background-color: #0C96DD;
    border-bottom-color: #FFF;
    border-left-color: #0C96DD;
    border-top-color: #FFF;
  }
  nav.progress li.active a::before {
    margin-right: 0;
  }
  nav.progress li.active a:hover::after, nav.progress li.active a:hover::before {
    background-color: #EB7424;
  }
}

nav.primary {
  margin-bottom: 0.7rem;
}

nav.primary a {
  color: #FFF;
}

nav.primary li:hover a {
  color: #0C96DD;
}

nav.primary > ul li {
  margin-bottom: 0;
}

nav.primary li a {
  color: #FFF;
}

nav.primary li.active a,
nav.primary li:hover a {
  color: #a5a5a5;
}

nav.utility {
  margin-bottom: 0.7rem;
}

nav.utility a {
  color: #FFF;
  font-size: 0.8rem;
}

.header-content {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.header-content .menu-toggle:hover,
.header-content .menu-toggle:focus {
  background-color: #0C96DD;
}

.header-content > .dropdown {
  background-color: #262626;
  z-index: 1001;
}

.header-content > .dropdown.sub-menu {
  background-color: #333232;
  z-index: 1002;
}

.desktop {
  display: none;
}

form.search {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

form.search .text,
form.search .submit {
  margin-bottom: 0;
}

form.search .text {
  width: 100%;
}

form.search label {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

form.search .submit {
  -ms-flex-preferred-size: 33%;
      flex-basis: 33%;
  -ms-flex-negative: 0;
      flex-shrink: 0;
}

form.search input {
  border: none;
  width: 100%;
}

.torso {
  padding-bottom: 3rem;
  padding-top: 3rem;
}

.hero {
  background: #191919 url(../img/hero.jpg) no-repeat center/cover;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  min-height: 240px;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  text-align: center;
}

.hero .copy {
  margin-left: auto;
  margin-right: auto;
  max-width: 1200px;
  padding-left: 50px;
  padding-right: 50px;
  position: relative;
}

.hero .copy * {
  color: #FFF;
}

main section:not(:last-child) {
  border-bottom: 1px solid #b2b2b2;
  margin-bottom: 3rem;
  padding-bottom: 2rem;
}

aside.primary {
  margin-bottom: 2rem;
}

nav.supplemental {
  margin-bottom: 0;
}

nav.supplemental ul {
  display: block;
}

nav.supplemental ul li {
  display: block;
  float: none;
  margin-bottom: 0;
}

nav.supplemental ul li a {
  color: #0C96DD;
  display: block;
  padding: 0.25em 0;
}

nav.supplemental ul li a:hover {
  color: #191919;
}

nav.supplemental ul ul a {
  color: #727272;
  font-size: 0.8rem;
  line-height: 2;
  padding: 0;
}

nav.supplemental > ul > li {
  padding-bottom: 0.5em;
}

nav.supplemental > ul > li ~ li {
  border-top: 1px solid #b2b2b2;
  padding-top: 0.5em;
}

footer.primary {
  background-color: #191919;
  color: #FFF;
  font-size: 0.9rem;
  padding: 3rem 0;
  text-align: center;
}

footer.primary .branding {
  margin-top: 0;
}

footer.primary .branding a {
  margin-bottom: 1rem;
}

footer.primary a {
  color: #0C96DD;
}

footer.primary a:hover {
  color: #0975ad;
}

footer.primary nav ul {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin-bottom: 2rem;
  text-align: center;
}

footer.primary .legal {
  text-align: center;
}

footer.primary .legal p {
  margin-bottom: 0.25rem;
}

footer.primary .legal a {
  margin-left: 0.35rem;
  margin-right: 0.35rem;
}

.social {
  list-style: none;
  margin: 0;
  padding-left: 0;
  margin-bottom: 1rem;
}

.social li::before {
  display: none;
}

.social li {
  display: inline-block;
  font-size: 1.25rem;
  height: 2em;
  line-height: 2em;
  margin-bottom: 0;
  margin-left: 0.5em;
  position: relative;
  vertical-align: bottom;
  width: 2em;
}

.social li:first-child {
  margin-left: 0;
}

.social li.facebook a {
  background-color: #3664A2;
}

.social li.twitter a {
  background-color: #55ACEE;
}

.social li.linkedin a {
  background-color: #0077B5;
}

.social li a {
  border-radius: 50%;
  color: #FFF;
  display: block;
  height: 100%;
  position: relative;
  text-align: center;
}

.social li a::before {
  display: block;
  left: 0;
  position: absolute;
  text-align: center;
  width: 100%;
}

.social li a:hover {
  color: #222;
}

h1,
h2,
h3,
h4,
h5 {
  font-weight: normal;
  line-height: 1.2;
  margin: 0 0 .6em;
}

h1 {
  font-size: 2.2rem;
}

h2 {
  font-size: 1.7rem;
}

h3 {
  font-size: 1.3rem;
}

h4 {
  font-size: 1.1rem;
}

h5 {
  font-size: 1rem;
}

p {
  margin: 0 0 2em;
  padding: 0;
}

b,
strong {
  font-weight: 700;
}

i,
em {
  font-style: italic;
}

blockquote {
  border-left: 1px solid #b2b2b2;
  color: #727272;
  font-style: italic;
  margin-bottom: 2em;
  padding-left: 1rem;
}

.intro {
  color: #727272;
}

.intro p {
  font-size: 1.3rem;
  margin-bottom: 0.8em;
}

.guide {
  color: #727272;
  font-size: 1.25rem;
}

.meta {
  color: #727272;
}

hr {
  border: 0;
  border-top: 1px solid #727272;
  display: block;
  height: 0;
  margin: 2em auto 3em;
  width: 100%;
}

a {
  color: #0C96DD;
  cursor: pointer;
  text-decoration: none;
}

a:hover, a:active {
  color: #EB7424;
}

a:focus {
  outline: thin dotted;
}

a.disabled, a[disabled] {
  color: #cccccc;
  cursor: default;
  pointer-events: none;
}

p,
ol,
ul,
dl {
  margin-bottom: 2rem;
}

ol,
ul {
  padding-left: 2rem;
}

ol li,
ol dt,
ol dd,
ul li,
ul dt,
ul dd {
  margin-bottom: 0.5em;
}

ul {
  list-style: disc;
}

dt {
  font-weight: bold;
  padding-left: 0.5em;
}

pre {
  background-color: #4A4A4A;
  padding: 1em;
  white-space: pre-wrap;
  word-wrap: break-word;
}

code {
  color: #FBCE78;
  font-family: "Consolas", monospace;
  padding: 2px 4px;
}

.sr-only {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

button,
input,
optgroup,
select,
textarea {
  font: inherit;
  margin: 0;
}

.button,
.checkboxes,
.file,
.password,
.radios,
.reset,
.select,
.submit,
.text,
.textarea {
  margin-bottom: 2rem;
}

label {
  cursor: pointer;
  display: block;
  font-weight: bold;
  margin-bottom: 0.5em;
}

.required {
  color: #CE2A2A;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

fieldset .help {
  color: #727272;
  font-size: 0.8rem;
  margin: 0;
}

input[type="date"],
input[type="datetime-local"],
input[type="email"],
input[type="month"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="time"],
input[type="url"],
input[type="week"],
textarea {
  border: 1px solid #b2b2b2;
  border-radius: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  color: #191919;
  display: block;
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0.4rem 0.6rem;
  width: 100%;
}

input[type="reset"],
input[type="search"],
input[type="text"],
input[type="submit"] {
  border-radius: 0;
  -webkit-appearance: none;
}

::-webkit-input-placeholder {
  color: #4A4A4A;
}

::ms-input-placeholder {
  color: #4A4A4A;
}

::-placeholder {
  color: #4A4A4A;
}

select {
  border: 1px solid #b2b2b2;
  height: 2.4rem;
  width: 100%;
}

.multiple select {
  height: auto;
  padding: 0.5rem;
}

textarea {
  height: 8em;
  overflow: auto;
  resize: vertical;
}

.radio,
.checkbox {
  font-weight: normal;
}

input[type="checkbox"],
input[type="radio"] {
  padding: 0;
}

a.button {
  background-color: #0C96DD;
  color: #FFF;
  display: inline-block;
  font-family: Arial, sans-serif;
  font-weight: bold;
  padding: 0.4rem 1rem;
  text-align: center;
  vertical-align: top;
  margin-bottom: 0;
}

a.button:hover, a.button:focus {
  background-color: #EB7424;
}

a.button.disabled, a.button[disabled] {
  background-color: #8c8c8c;
  color: #cccccc;
  pointer-events: none;
}

button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  background-color: #0C96DD;
  color: #FFF;
  display: inline-block;
  font-family: Arial, sans-serif;
  font-weight: bold;
  padding: 0.4rem 1rem;
  text-align: center;
  vertical-align: top;
  border: none;
  cursor: pointer;
}

button:hover, button:focus,
input[type="button"]:hover,
input[type="button"]:focus,
input[type="reset"]:hover,
input[type="reset"]:focus,
input[type="submit"]:hover,
input[type="submit"]:focus {
  background-color: #EB7424;
}

button.disabled, button[disabled],
input[type="button"].disabled,
input[type="button"][disabled],
input[type="reset"].disabled,
input[type="reset"][disabled],
input[type="submit"].disabled,
input[type="submit"][disabled] {
  background-color: #8c8c8c;
  color: #cccccc;
  pointer-events: none;
}

[class^="fa-example"]::before {
  margin-right: .5rem;
}

.fa-example-light::before {
  font: normal normal normal 1em / 1 "Font Awesome 5 Pro";
  content: "\F11B";
  display: inline-block;
  font-size: inherit;
  font-weight: 300;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  speak: none;
  text-rendering: auto;
  text-transform: none;
}

.fa-example-regular::before {
  font: normal normal normal 1em / 1 "Font Awesome 5 Pro";
  content: "\F11B";
  display: inline-block;
  font-size: inherit;
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  speak: none;
  text-rendering: auto;
  text-transform: none;
}

.fa-example-solid::before {
  font: normal normal normal 1em / 1 "Font Awesome 5 Pro";
  content: "\F11B";
  display: inline-block;
  font-size: inherit;
  font-weight: 900;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  speak: none;
  text-rendering: auto;
  text-transform: none;
}

.fa-example-brand::before {
  font: normal normal normal 1em / 1 "Font Awesome 5 Pro";
  content: "\F23E";
  display: inline-block;
  font-size: inherit;
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  speak: none;
  text-rendering: auto;
  text-transform: none;
}

.success {
  margin-bottom: 2rem;
  padding: 1em 3em;
  position: relative;
  background-color: #48AC2C;
}

.success p:last-of-type,
.success ul:last-of-type {
  margin-bottom: 0;
}

.success a {
  text-decoration: underline;
}

.success::before {
  font: normal normal normal 1em / 1 "Font Awesome 5 Pro";
  content: "";
  display: inline-block;
  font-size: inherit;
  font-weight: 900;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  speak: none;
  text-rendering: auto;
  text-transform: none;
  content: "";
  font-size: 1em;
  left: 1em;
  line-height: inherit;
  position: absolute;
  text-align: center;
  top: 1em;
  width: 1em;
}

.success::before {
  content: "\F00C";
}

.success a {
  color: #FFF;
}

.success a:hover {
  color: #d9d9d9;
}

.info {
  margin-bottom: 2rem;
  padding: 1em 3em;
  position: relative;
  background-color: #DDD;
}

.info p:last-of-type,
.info ul:last-of-type {
  margin-bottom: 0;
}

.info a {
  text-decoration: underline;
}

.info::before {
  font: normal normal normal 1em / 1 "Font Awesome 5 Pro";
  content: "";
  display: inline-block;
  font-size: inherit;
  font-weight: 900;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  speak: none;
  text-rendering: auto;
  text-transform: none;
  content: "";
  font-size: 1em;
  left: 1em;
  line-height: inherit;
  position: absolute;
  text-align: center;
  top: 1em;
  width: 1em;
}

.info::before {
  content: "\F129";
}

.error {
  margin-bottom: 2rem;
  padding: 1em 3em;
  position: relative;
  background-color: #CE2A2A;
}

.error p:last-of-type,
.error ul:last-of-type {
  margin-bottom: 0;
}

.error a {
  text-decoration: underline;
}

.error::before {
  font: normal normal normal 1em / 1 "Font Awesome 5 Pro";
  content: "";
  display: inline-block;
  font-size: inherit;
  font-weight: 900;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  speak: none;
  text-rendering: auto;
  text-transform: none;
  content: "";
  font-size: 1em;
  left: 1em;
  line-height: inherit;
  position: absolute;
  text-align: center;
  top: 1em;
  width: 1em;
}

.error::before {
  content: "\F12A";
}

.error a {
  color: #DDD;
}

.error a:hover {
  color: #b7b7b7;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
  margin-bottom: 2rem;
  width: 100%;
}

table caption {
  font-size: 0.9rem;
  margin-bottom: 0.75em;
}

table td,
table th {
  padding: 0.5em 1em;
  text-align: left;
  vertical-align: top;
}

table th {
  background-color: #191919;
  color: #FFF;
  font-weight: bold;
  text-transform: uppercase;
}

table td {
  border: 1px solid #b2b2b2;
}

table tr:nth-child(even) td {
  background-color: #F3F3F3;
}

@media only screen and (min-width: 576px) {
  #responsive-tester span {
    background-color: blue;
  }
  #responsive-tester::before {
    content: "Medium: 576px\2013";
  }
  #responsive-tester::after {
    content: "1024px";
  }
}

@media only screen and (min-width: 1024px) {
  #responsive-tester span {
    background-color: green;
  }
  #responsive-tester::before {
    content: "Large: 1024px\2013";
  }
  #responsive-tester::after {
    content: "1200px";
  }
  .search-drawer {
    display: block;
  }
  .branding {
    margin-right: 2rem;
  }
  header.primary .header-content {
    padding-bottom: 0;
  }
  nav ul {
    text-align: left;
  }
  nav.primary {
    margin-bottom: 0;
  }
  nav.primary > ul > li {
    font-size: 1.1rem;
    margin-left: 1rem;
    padding-bottom: 1rem;
    position: relative;
  }
  nav.primary > ul > li:first-child {
    margin-left: 0;
  }
  nav.primary ul {
    text-align: left;
  }
  nav.primary ul li li {
    display: block;
    float: none;
  }
  .utilities nav.utility {
    margin-bottom: 0.4rem;
  }
  .utilities nav.utility ul {
    text-align: right;
  }
  .desktop {
    -webkit-box-align: end;
        -ms-flex-align: end;
            align-items: flex-end;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-flex: 1;
        -ms-flex: 1 1 auto;
            flex: 1 1 auto;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-flow: column nowrap;
            flex-flow: column nowrap;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }
  .desktop nav.primary {
    -ms-flex-item-align: start;
        align-self: flex-start;
  }
  button.menu-toggle {
    display: none;
  }
  .torso .wrap {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }
  .torso .wrap main {
    -webkit-box-flex: 1;
        -ms-flex: 1 1 auto;
            flex: 1 1 auto;
    padding-right: 2rem;
  }
  .torso .wrap aside.primary {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
  }
  aside.primary {
    margin-bottom: 0;
  }
  aside.primary nav ul {
    text-align: left;
  }
  footer.primary .wrapper {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
  footer.primary .wrapper > * {
    -webkit-box-flex: 1;
        -ms-flex: 1 0 0px;
            flex: 1 0 0px;
  }
  footer.primary .wrapper > nav {
    -webkit-box-flex: 2;
        -ms-flex-positive: 2;
            flex-grow: 2;
    margin-bottom: 0;
  }
  footer.primary .wrapper > nav > ul {
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
  footer.primary .branding {
    margin-right: 0;
    max-width: none;
    text-align: left;
  }
  footer.primary .social {
    text-align: right;
  }
  h1 {
    font-size: 2.6rem;
  }
  h2 {
    font-size: 2.1rem;
  }
  h3 {
    font-size: 1.6rem;
  }
  h4 {
    font-size: 1.25rem;
  }
  h5 {
    font-size: 1.15rem;
  }
}

@media only screen and (min-width: 1200px) {
  #responsive-tester span {
    background-color: red;
  }
  #responsive-tester::before {
    content: "XL: 1200px+";
  }
  #responsive-tester::after {
    content: '';
  }
}

@media print {
  * {
    background-color: transparent !important;
    -webkit-box-shadow: none !important;
            box-shadow: none !important;
    color: #000 !important;
    text-shadow: none !important;
  }
  a {
    text-decoration: underline;
  }
  pre,
  blockquote,
  tr,
  img,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  @page {
    margin: 0.5cm;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/